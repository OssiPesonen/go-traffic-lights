/**
 * @fileoverview gRPC-Web generated client stub for proto
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.28.2
// source: proto/traffic_lights_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"
import * as proto_traffic_lights_service_pb from '../proto/traffic_lights_service_pb'; // proto import: "proto/traffic_lights_service.proto"


export class TrafficLightsServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListProviders = new grpcWeb.MethodDescriptor(
    '/proto.TrafficLightsService/ListProviders',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    proto_traffic_lights_service_pb.ListProviderResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    proto_traffic_lights_service_pb.ListProviderResponse.deserializeBinary
  );

  listProviders(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<proto_traffic_lights_service_pb.ListProviderResponse>;

  listProviders(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_traffic_lights_service_pb.ListProviderResponse) => void): grpcWeb.ClientReadableStream<proto_traffic_lights_service_pb.ListProviderResponse>;

  listProviders(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_traffic_lights_service_pb.ListProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.TrafficLightsService/ListProviders',
        request,
        metadata || {},
        this.methodDescriptorListProviders,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.TrafficLightsService/ListProviders',
    request,
    metadata || {},
    this.methodDescriptorListProviders);
  }

  methodDescriptorReadProvider = new grpcWeb.MethodDescriptor(
    '/proto.TrafficLightsService/ReadProvider',
    grpcWeb.MethodType.UNARY,
    proto_traffic_lights_service_pb.ReadProviderRequest,
    proto_traffic_lights_service_pb.ReadProviderResponse,
    (request: proto_traffic_lights_service_pb.ReadProviderRequest) => {
      return request.serializeBinary();
    },
    proto_traffic_lights_service_pb.ReadProviderResponse.deserializeBinary
  );

  readProvider(
    request: proto_traffic_lights_service_pb.ReadProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_traffic_lights_service_pb.ReadProviderResponse>;

  readProvider(
    request: proto_traffic_lights_service_pb.ReadProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_traffic_lights_service_pb.ReadProviderResponse) => void): grpcWeb.ClientReadableStream<proto_traffic_lights_service_pb.ReadProviderResponse>;

  readProvider(
    request: proto_traffic_lights_service_pb.ReadProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_traffic_lights_service_pb.ReadProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.TrafficLightsService/ReadProvider',
        request,
        metadata || {},
        this.methodDescriptorReadProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.TrafficLightsService/ReadProvider',
    request,
    metadata || {},
    this.methodDescriptorReadProvider);
  }

  methodDescriptorCreateProvider = new grpcWeb.MethodDescriptor(
    '/proto.TrafficLightsService/CreateProvider',
    grpcWeb.MethodType.UNARY,
    proto_traffic_lights_service_pb.CreateProviderRequest,
    proto_traffic_lights_service_pb.CreateProviderResponse,
    (request: proto_traffic_lights_service_pb.CreateProviderRequest) => {
      return request.serializeBinary();
    },
    proto_traffic_lights_service_pb.CreateProviderResponse.deserializeBinary
  );

  createProvider(
    request: proto_traffic_lights_service_pb.CreateProviderRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_traffic_lights_service_pb.CreateProviderResponse>;

  createProvider(
    request: proto_traffic_lights_service_pb.CreateProviderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_traffic_lights_service_pb.CreateProviderResponse) => void): grpcWeb.ClientReadableStream<proto_traffic_lights_service_pb.CreateProviderResponse>;

  createProvider(
    request: proto_traffic_lights_service_pb.CreateProviderRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_traffic_lights_service_pb.CreateProviderResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.TrafficLightsService/CreateProvider',
        request,
        metadata || {},
        this.methodDescriptorCreateProvider,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.TrafficLightsService/CreateProvider',
    request,
    metadata || {},
    this.methodDescriptorCreateProvider);
  }

  methodDescriptorGetToken = new grpcWeb.MethodDescriptor(
    '/proto.TrafficLightsService/GetToken',
    grpcWeb.MethodType.UNARY,
    proto_traffic_lights_service_pb.LoginRequest,
    proto_traffic_lights_service_pb.TokenResponse,
    (request: proto_traffic_lights_service_pb.LoginRequest) => {
      return request.serializeBinary();
    },
    proto_traffic_lights_service_pb.TokenResponse.deserializeBinary
  );

  getToken(
    request: proto_traffic_lights_service_pb.LoginRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_traffic_lights_service_pb.TokenResponse>;

  getToken(
    request: proto_traffic_lights_service_pb.LoginRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_traffic_lights_service_pb.TokenResponse) => void): grpcWeb.ClientReadableStream<proto_traffic_lights_service_pb.TokenResponse>;

  getToken(
    request: proto_traffic_lights_service_pb.LoginRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_traffic_lights_service_pb.TokenResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.TrafficLightsService/GetToken',
        request,
        metadata || {},
        this.methodDescriptorGetToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.TrafficLightsService/GetToken',
    request,
    metadata || {},
    this.methodDescriptorGetToken);
  }

  methodDescriptorRegisterUser = new grpcWeb.MethodDescriptor(
    '/proto.TrafficLightsService/RegisterUser',
    grpcWeb.MethodType.UNARY,
    proto_traffic_lights_service_pb.RegistrationRequest,
    google_protobuf_empty_pb.Empty,
    (request: proto_traffic_lights_service_pb.RegistrationRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  registerUser(
    request: proto_traffic_lights_service_pb.RegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  registerUser(
    request: proto_traffic_lights_service_pb.RegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  registerUser(
    request: proto_traffic_lights_service_pb.RegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.TrafficLightsService/RegisterUser',
        request,
        metadata || {},
        this.methodDescriptorRegisterUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.TrafficLightsService/RegisterUser',
    request,
    metadata || {},
    this.methodDescriptorRegisterUser);
  }

  methodDescriptorRefreshToken = new grpcWeb.MethodDescriptor(
    '/proto.TrafficLightsService/RefreshToken',
    grpcWeb.MethodType.UNARY,
    proto_traffic_lights_service_pb.RefreshTokenRequest,
    proto_traffic_lights_service_pb.TokenResponse,
    (request: proto_traffic_lights_service_pb.RefreshTokenRequest) => {
      return request.serializeBinary();
    },
    proto_traffic_lights_service_pb.TokenResponse.deserializeBinary
  );

  refreshToken(
    request: proto_traffic_lights_service_pb.RefreshTokenRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_traffic_lights_service_pb.TokenResponse>;

  refreshToken(
    request: proto_traffic_lights_service_pb.RefreshTokenRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_traffic_lights_service_pb.TokenResponse) => void): grpcWeb.ClientReadableStream<proto_traffic_lights_service_pb.TokenResponse>;

  refreshToken(
    request: proto_traffic_lights_service_pb.RefreshTokenRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_traffic_lights_service_pb.TokenResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.TrafficLightsService/RefreshToken',
        request,
        metadata || {},
        this.methodDescriptorRefreshToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.TrafficLightsService/RefreshToken',
    request,
    metadata || {},
    this.methodDescriptorRefreshToken);
  }

  methodDescriptorRevokeRefreshToken = new grpcWeb.MethodDescriptor(
    '/proto.TrafficLightsService/RevokeRefreshToken',
    grpcWeb.MethodType.UNARY,
    proto_traffic_lights_service_pb.RefreshTokenRequest,
    google_protobuf_empty_pb.Empty,
    (request: proto_traffic_lights_service_pb.RefreshTokenRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  revokeRefreshToken(
    request: proto_traffic_lights_service_pb.RefreshTokenRequest,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  revokeRefreshToken(
    request: proto_traffic_lights_service_pb.RefreshTokenRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  revokeRefreshToken(
    request: proto_traffic_lights_service_pb.RefreshTokenRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.TrafficLightsService/RevokeRefreshToken',
        request,
        metadata || {},
        this.methodDescriptorRevokeRefreshToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.TrafficLightsService/RevokeRefreshToken',
    request,
    metadata || {},
    this.methodDescriptorRevokeRefreshToken);
  }

  methodDescriptorRevokeAllRefreshTokens = new grpcWeb.MethodDescriptor(
    '/proto.TrafficLightsService/RevokeAllRefreshTokens',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  revokeAllRefreshTokens(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  revokeAllRefreshTokens(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  revokeAllRefreshTokens(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: google_protobuf_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/proto.TrafficLightsService/RevokeAllRefreshTokens',
        request,
        metadata || {},
        this.methodDescriptorRevokeAllRefreshTokens,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/proto.TrafficLightsService/RevokeAllRefreshTokens',
    request,
    metadata || {},
    this.methodDescriptorRevokeAllRefreshTokens);
  }

}

